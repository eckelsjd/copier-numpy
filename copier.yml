# CONFIGURATION --------------------------
_min_copier_version: "9"
_subdirectory: template
_templates_suffix: jinja
_jinja_extensions:
  - copier_templates_extensions.TemplateExtensionLoader
  - extensions.py:TemplateDefaultExtension
_message_before_copy: |
  Thanks for generating a project with the numpy template.
  
  You will be asked a series of questions to generate a 
  tailored project for you.
_message_after_copy: |
  Your project "{{ project_name }}" has been created successfully!
_message_before_update: |
  Thanks for updating your project using the numpy template.
  
  You will be asked a series of questions whose answers are
  pre-populated with previously entered values. Feel free to
  change them as needed.
_message_after_update: | 
  Your project "{{ project_name }}" has been updated successfully!
  In case there are any conflicts, please resolve them.

# POST COPY TASKS (only on init)-------------------------
_tasks:
  - command: "pdm lock"
    when: "{{ not is_copier_update }}"
  - command: "pdm install -G dev --no-default"
    when: "{{ not is_copier_update }}"
  - command:
      - 'powershell'
      - '-command'
      - >
         $tempFilePath = [System.IO.Path]::GetTempFileName() + ".py";
         Invoke-WebRequest -Uri https://raw.githubusercontent.com/eckelsjd/copier-numpy/{{ _copier_conf.vcs_ref_hash }}/setup_github.py -OutFile $tempFilePath;
         pdm run python $tempFilePath;
         Remove-Item $tempFilePath;
    when: "{{ _copier_conf.os == 'windows' and init_github and not is_copier_update }}"
  - command:
      - >
         temp_file=$(mktemp).py;
         curl -sSL https://raw.githubusercontent.com/eckelsjd/copier-numpy/{{ _copier_conf.vcs_ref_hash }}/setup_github.py --output "$temp_file";
         pdm run python "$temp_file";
         rm "$temp_file";
    when: "{{ _copier_conf.os in ['linux', 'macos'] and init_github and not is_copier_update }}"

# PROMPT ---------------------------------
project_name:
  type: str
  help: "Enter your project name:"
  default: "{{ project_dir }}"

project_description:
  type: str
  help: "Enter a project description:"

author_name:
  type: str
  help: "Enter your full name:"
  default: "{{ git_user_name }}"

author_email:
  type: str
  help: "Enter your email:"
  default: "{{ git_user_email }}"

repository_namespace:
  type: str
  help: "Enter your repository namespace (e.g. your username/org on GitHub):"
  default: "{{ git_username }}"

is_distributable:
  type: bool
  help: "Do you want to build this project as a package for distribution (e.g. pip install)?"
  default: false

distribution_name:
  type: str
  help: "Your Python package distribution name (for `pip install NAME`):"
  default: "{{ project_name | slugify }}"
  when: "{{ is_distributable }}"
  validator: "{% if distribution_name | pypi_name_exists %}`{{ distribution_name }}` already exists on https://pypi.org. Please choose a unique package name.{% endif %}"

import_name:
  type: str
  help: "Your Python package import name (for `import NAME`):"
  default: "{{ project_name | slugify('_') }}"
  when: "{{ is_distributable }}"

copyright_license:
  type: str
  help: "Choose a license:"
  default: "MIT"
  choices:
    - AFL-3.0
    - Apache-2.0
    - Artistic-2.0
    - BSD-2-Clause
    - BSD-3-Clause
    - BSD-4-Clause
    - BSL-1.0
    - CC-BY-4.0
    - WTFPL
    - ECL-2.0
    - EPL-2.0
    - EUPL-1.1
    - AGPL-3.0
    - GPL-2.0
    - GPL-3.0
    - LGPL-2.1
    - LGPL-3.0
    - ISC
    - LPPL-1.3c
    - MS-PL
    - MIT
    - OSL-3.0
    - Unlicense
    - Zlib

requires_python:
  type: str
  help: "Enter a specifier string for supported Python versions:"
  default: ">=3.11"

python_version: # Pretty version string variable (e.g. 3.11+)
  type: str
  default: "{{ requires_python | format_python_version }}"
  when: false

include_docs:
  type: bool
  help: "Do you want to include documentation for your project?"
  default: false

init_github:
  type: bool
  help: "Do you want to include git version control and connect with GitHub?"
  default: true

include_cicd:
  type: bool
  help: "Do you want to include GitHub actions (i.e. CI/CD workflows)?"
  default: false
  when: "{{ init_github }}"